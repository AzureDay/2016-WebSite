@model TeamSpark.AzureDay.WebSite.Host.Models.Profile.RegistrationModel

<div class="boxedcontent">
	@Html.Action("Header", "Layout")

	<h1>Регистрация</h1>

	<form method="POST" data-bind="submit: showModal">

		<input name="email" data-bind="textInput: email" placeholder="Email" />

		<input name="password" type="password" data-bind="textInput: password" placeholder="Пароль" />

		<input type="password" data-bind="textInput: password2" placeholder="Пароль еще раз"/>

		<div data-bind="style: { display: isPasswordValid() ? 'none' : 'block' }">Пароли должны совпадать</div>
		<div data-bind="style: { display: isPasswordLengthValid() && isPasswordLength2Valid() ? 'none' : 'block' }">Минимальная длина пароля 6 символов</div>

		<input name="firstName" data-bind="textInput: fName" placeholder="Имя" />

		<input name="lastName" data-bind="textInput: lName" placeholder="Фамилия" />

		<input name="company" data-bind="textInput: company" placeholder="Компания" />

		<button type="submit" data-bind="enable: isModelValid">Зарегистрироваться</button>

		<div data-bind="style: { display: isModelValid() ? 'none' : 'block' }">Все поля обязательны для заполнения</div>

	</form>

	@Html.Action("Footer", "Layout")

</div>

@Html.Partial("_ModalWait")

@section Scripts
{
	@Scripts.Render("~/cdn/knockout/js")

	<script>
		$(document).ready(function() {
			var registrationModel = {
				email: ko.observable(''),
				password: ko.observable(''),
				password2: ko.observable(''),
				fName: ko.observable(''),
				lName: ko.observable(''),
				company: ko.observable('')
			};

			registrationModel.isPasswordLengthValid = ko.computed(function() {
				var pwd = registrationModel.password();
				return !!pwd && pwd.length >= 6;
			});

			registrationModel.isPasswordLength2Valid = ko.computed(function() {
				var pwd = registrationModel.password2();
				return !!pwd && pwd.length >= 6;
			});

			registrationModel.isPasswordValid = ko.computed(function() {
				var pwd = registrationModel.password();
				var pwd2 = registrationModel.password2();

				return pwd === pwd2 && registrationModel.isPasswordLengthValid() && registrationModel.isPasswordLength2Valid();
			});

			registrationModel.isModelValid = ko.computed(function() {
				var email = registrationModel.email();
				var fName = registrationModel.fName();
				var lName = registrationModel.lName();
				var company = registrationModel.company();

				return registrationModel.isPasswordValid() && !!email && !!fName && !!lName && !!company;
			});

			registrationModel.showModal = function() {
				setTimeout(function () {
					modal.showModal();
				});
				return true;
			}

			ko.applyBindings(registrationModel);
		});
	</script>
}